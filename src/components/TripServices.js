import React, { useState , useEffect, useRef } from "react";import { View, Text, Image, TouchableOpacity, ImageBackground, ScrollView, I18nManager, Dimensions } from "react-native";import {Container, Button, Form, Input, Toast, Header, Right, Left, Body, CheckBox} from 'native-base'import styles from '../../assets/styles'import i18n from "../../locale/i18n";import MapView from 'react-native-maps';import  Modal  from "react-native-modal";import COLORS from "../consts/colors";import { useDispatch, useSelector } from 'react-redux'const width		 	= Dimensions.get('window').width;const height	 	= Dimensions.get('window').height;function TripServices({navigation, route}) {	let { data } 			= route.params;	const headerTitle  		= data.categoryName;	const headerImg    		= data.categoryImage;	const subCategories 	= data.subCategories;	const [servicesChecked, setServicesChecked]   = useState([]);	function setSubcategory(subCategoryId) {		let subCategoriesIds = servicesChecked;		const index = servicesChecked.indexOf(subCategoryId);		if (index == -1){			subCategoriesIds.push(subCategoryId);			setServicesChecked([...subCategoriesIds])		} else{			subCategoriesIds.splice(index, 1)			setServicesChecked([...subCategoriesIds])		}	}	function onSubmit(){		data['subCategories'] = servicesChecked;		return navigation.navigate('providers', { data });	}	function renderSubmit(){		if (servicesChecked.length > 0){			return(				<Button onPress={() => onSubmit()} style={[styles.blueBtn, styles.Width_80, styles.textCenter, { bottom: 95, alignSelf: 'center' }]}>					<Text style={[styles.textRegular , styles.text_White , styles.textSize_16, styles.textCenter]}>{ i18n.t('continue') }</Text>				</Button>			)		}		return(			<Button disabled={true} style={[styles.grayBtn, styles.Width_80, styles.textCenter, { bottom: 95, alignSelf: 'center' }]}>				<Text style={[styles.textRegular , styles.text_White , styles.textSize_16, styles.textCenter]}>{ i18n.t('continue') }</Text>			</Button>		)	}	return(		<Container>			<ImageBackground source={require('../../assets/images/menu_bg.png')} style={{ width, height, alignSelf: 'center', flexGrow: 1 }} resizeMode={'cover'}>				<Header style={{ backgroundColor: 'transparent', marginTop: 10, borderBottomWidth: 0 }} noShadow>					<Right style={{ flex: 0, marginLeft: 10 }}>						<TouchableOpacity onPress={() => navigation.goBack()} style={{ width: 50, height: 50, justifyCenter: 'center', alignItems: 'center' }}>							<Image source={require('../../assets/images/white_back.png')} style={[ styles.transform , { width: 27, height: 27, marginTop: 10 }]} resizeMode={'contain'}/>						</TouchableOpacity>						<Text style={{ textAlign:  I18nManager.isRTL ? 'right' : 'left', color: '#fff', fontSize: 24, fontFamily: 'ArbFONTSBold', marginBottom: 5 }}>{ headerTitle }</Text>					</Right>					<Body style={{ alignSelf: 'flex-start'}} />				</Header>				<View style={styles.tripHeaderShadow}>					<View style={styles.tripHeaderImage}>						<ImageBackground resizeMode={'cover'} source={{ uri: headerImg }} style={styles.tripImage}>							<View style={[ styles.overlay_black, styles.Width_100, styles.position_A, styles.height_90, { zIndex: 0 } ]} />							<Text style={[styles.textSize_18, styles.text_White, styles.textBold, styles.textCenter, styles.Width_70]}>{ i18n.t('selectSafaryLocation') }</Text>						</ImageBackground>					</View>				</View>				<View style={[styles.mapView, { height: height*90/100, bottom: -50, paddingTop: 70}]}>					<ScrollView style={{ height: height*70/100}}>						{							subCategories.map(( subCategory, i ) => (								<View key={i} style={{ alignItems: 'center', paddingHorizontal: 15  }}>									<TouchableOpacity onPress={() => setSubcategory(subCategory.id)} style={{ flexDirection: 'row', width: '100%', borderBottomWidth: 1, borderBottomColor: COLORS.light_gray, height: 50, alignSelf: 'center', alignItems: 'center' }}>										<CheckBox style={{ marginTop: 5, borderRadius: 3, borderColor: COLORS.light_gray, paddingHorizontal: 3 }} checked={servicesChecked.indexOf(subCategory.id) !== -1} onPress={() => setSubcategory(subCategory.id)}/>										<Text style={[ styles.marginHorizontal_20, styles.textRegular, styles.text_gray, styles.textSize_16 ]}>{ subCategory.name }</Text>									</TouchableOpacity>								</View>							))						}					</ScrollView>					{ renderSubmit() }				</View>			</ImageBackground>		</Container>	);}export default TripServices;