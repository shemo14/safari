import React, { useState , useEffect, useRef } from "react";import { View, Text, Image, TouchableOpacity, ImageBackground, KeyboardAvoidingView, I18nManager, Dimensions, FlatList, Platform, Share, Linking, } from "react-native";import {Container, Button, Form, Input, Toast, Header, Right, Left, Body, Icon, Content} from 'native-base'import styles from '../../assets/styles'import Swiper from 'react-native-swiper';import i18n from "../../locale/i18n";import StarRating from "react-native-star-rating";import COLORS from "../consts/colors";import { useDispatch, useSelector } from 'react-redux'import {setFav, setRate} from '../actions';import * as Animatable from "react-native-animatable";const width	 		= Dimensions.get('window').width;const height 		= Dimensions.get('window').height;const isIOS  		= Platform.OS === 'ios';const IS_IPHONE_X 	= (height === 812 || height === 896) && Platform.OS === 'ios';function ServiceDetails({navigation, route}) {	let { item, fav } 				= route.params;	const [serviceFav, setItemFav]	= useState(fav);	const token 					= useSelector(state => state.auth.user ? state.auth.user.data.token : null);	const lang   					= useSelector(state => state.lang.lang);	const dispatch 	        		= useDispatch();	const [ rate, setServiceRate ]	= useState(item.rate);	function onFav(id) {		setItemFav(!fav);		dispatch(setFav(lang, id, token))	}	function onStarRatingPress(rate) {		setServiceRate(rate);		dispatch(setRate(lang, item.id, token, rate))	}	const onShare = async () => {		try {			const result = await Share.share({				message:					'Safari App',			});			if (result.action === Share.sharedAction) {				if (result.activityType) {					// shared with activity type of result.activityType				} else {					// shared				}			} else if (result.action === Share.dismissedAction) {				// dismissed			}		} catch (error) {			alert(error.message);		}	};	return (		<Container>			<Content style={{ marginTop: IS_IPHONE_X ? -50 : 0 }}>				<View style={[styles.directionRowSpace , styles.paddingHorizontal_25 , { position: 'absolute', width: '100%', height: 100, zIndex: 1, marginTop: IS_IPHONE_X ? 50 : 30 }]}>					<TouchableOpacity onPress={() => navigation.goBack()}>						<Image source={require('../../assets/images/white_back.png')} style={[ styles.transform, { width: 25, height: 25}]} resizeMode={'contain'}/>					</TouchableOpacity>					<View style={[styles.directionRowSpace]}>						<TouchableOpacity onPress={() => onShare()} >							<Image source={require('../../assets/images/share.png')} style={{ width: 25, height: 25 , marginRight:10}} resizeMode={'contain'}/>						</TouchableOpacity>						{							token ?								<TouchableOpacity onPress={() => onFav(item.id)}  >									<Icon type={'AntDesign'} name={ serviceFav ? 'heart' : 'hearto'} style={{ color: COLORS.orange }} />								</TouchableOpacity>								:								null						}					</View>				</View>				<View style={{ width: '100%', height: IS_IPHONE_X ? 400 : 330 }}>					<Swiper dotStyle={[styles.doteStyle2]}						activeDotStyle={[styles.activeDot2]}						key={3}						containerStyle={{ height: 300 }}						style={{ flexDirection: isIOS && I18nManager.isRTL  ? 'row' : 'row-reverse' }}						autoplay={true} loop={true}>						{							item.images.map((img, i) => (								<View key={i} >									<View style={[styles.overlay_black , styles.Width_100, { zIndex: 1, height: 400, position: 'absolute' }]} />									<Image source={{ uri: img.image }} style={{ width: '100%', height: height*40/100, alignSelf: 'center' }} resizeMode={'cover'}/>								</View>							))						}					</Swiper>				</View>				<View style={{ width: '100%', minHeight: 135, borderTopRightRadius: 40, backgroundColor: COLORS.blue, marginTop: -100, flexDirection: 'row', padding: 15 }}>					<View style={{ flex: 3, alignItems: 'flex-start' }}>						<Text style={[styles.textBold, styles.textSize_18, styles.text_White, styles._alignText, styles.Width_90, styles.textRight, { alignSelf: 'flex-start', height: 40, }]}>{ (item.name).substr(0, 25) + '...' }</Text>						<Text style={[ styles.textSize_16, styles.text_White, styles.textRegular, styles._alignText, { alignSelf: 'flex-start', marginTop: -5 } ]}> { item.price }  </Text>					</View>					<View style={{ flex: 1, justifyCenter: 'center', alignItems: 'center',  }}>						<TouchableOpacity onPress={() => Linking.openURL('https://api.whatsapp.com/send?phone=' + item.whatsapp)} style={{ flexDirection: 'row', position: 'absolute', right: 2, top: 35 }}>							<Image source={require('../../assets/images/whatsapp.png')} style={{ width: 30, height: 30, marginHorizontal: 10 }}/>							<Text style={[styles.textRegular, styles.textSize_16, styles.text_White]}>{ i18n.t('contactUs') }</Text>						</TouchableOpacity>						{token ?							<View style={{ width: 120, marginTop: 7, paddingRight: 20 }}>								<StarRating									disabled={false}									maxStars={5}									rating={rate}									selectedStar={(rating) => onStarRatingPress(rating)}									fullStarColor={COLORS.orange}									emptyStarColor={COLORS.light_gray}									starSize={18}								/>							</View>							:							null						}					</View>				</View>				<View style={{ width: '100%', borderTopRightRadius: 50, backgroundColor: '#fff', marginTop: -45 , padding: 15, marginBottom: 50 }}>					<Text style={[ styles.textSize_15, styles.text_gray, styles.textRegular, styles._alignText, styles.Width_100, { alignSelf: 'flex-start' } ]}> { item.description } </Text>					<View>						<Text style={[ styles.textSize_20, styles.text_black, styles.textBold, styles._alignText, { alignSelf: 'flex-start' } ]}> { i18n.t('additions') } </Text>						{							item.additions.map(( addition, i ) => (								<Animatable.View animation="fadeInLeft" easing="ease-out" delay={700} style={{ backgroundColor: '#f7f7fa', flexDirection: 'row', borderRadius: 10, alignItems: 'center', padding: 5, marginVertical: 5 }}>									<View style={{ width: 60, height: 60, borderRadius: 10, overflow: 'hidden' }}>										<Image source={{ uri: addition.image }} style={{ width: 60, height: 60 }} resizeMode={'cover'}/>									</View>									<View style={{ marginHorizontal: 10  }}>										<Text style={[ styles.textSize_18, styles.text_black, styles.textBold, styles._alignText, { alignSelf: 'flex-start' } ]}> { addition.name } </Text>										<Text style={[ styles.textSize_16, styles.text_orange, styles.textRegular, styles._alignText, { alignSelf: 'flex-start', marginTop: -10 } ]}> { addition.price }  </Text>									</View>								</Animatable.View>							))						}					</View>				</View>			</Content>		</Container>	)}export default ServiceDetails;