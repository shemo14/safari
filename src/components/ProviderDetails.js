import React, { useState , useEffect, useRef } from "react";import {	View,	Text,	Image,	TouchableOpacity,	ImageBackground,	KeyboardAvoidingView,	I18nManager,	Dimensions,	FlatList,	Platform,	Share,	Linking, ActivityIndicator,} from "react-native";import {Container, Button, Form, Input, Toast, Header, Right, Left, Body, Icon, Content} from 'native-base'import styles from '../../assets/styles'import Swiper from 'react-native-swiper';import i18n from "../../locale/i18n";import StarRating from "react-native-star-rating";import COLORS from "../consts/colors";import { useDispatch, useSelector } from 'react-redux'import {getProviderDetails, setFav} from '../actions';import Item from './Item'const width	 		= Dimensions.get('window').width;const height 		= Dimensions.get('window').height;const isIOS  		= Platform.OS === 'ios';const IS_IPHONE_X 	= (height === 812 || height === 896) && Platform.OS === 'ios';function ProviderDetails({navigation, route}) {	let { id, data }	 			= route.params;	const token 					= useSelector(state => state.auth.user ? state.auth.user.data.token : null);	const lang   					= useSelector(state => state.lang.lang);	const providerDetails  			= useSelector(state => state.providerDetails.details);	const loader 					= useSelector(state => state.providers.loader);	const [extraData, setExtraData] = useState(false);	const dispatch = useDispatch();	function fetchData(){		dispatch(getProviderDetails(lang, id, token, data.latitude, data.longitude))		console.log('providerDetails' , providerDetails)	}	function whatsNum(){		if (providerDetails.provider && Platform.OS === 'ios'){			return (providerDetails.provider.whatsapp).substr(1);		}else if (providerDetails.provider && Platform.OS !== 'ios'){			return providerDetails.provider.whatsapp		}else			return null	}	function renderNoData() {		if (providerDetails.services && (providerDetails.services).length <= 0) {			return (				<View style={[styles.directionColumnCenter , styles.Width_100, {height:350} ]}>					<Image source={require('../../assets/images/no_data.png')} resizeMode={'contain'}						   style={{alignSelf: 'center', width: 120, height: 120}}/>					<Text style={[ styles.textBold, styles.text_gray, styles.textSize_16]}>{ i18n.t('noData') }</Text>				</View>			);		}		return null	}	useEffect(() => {		console.log('test meee')		fetchData();		const unsubscribe = navigation.addListener('focus', () => {			fetchData();			setExtraData(!extraData);		});		return unsubscribe;	}, [navigation , loader, route.params, data, id]);	function renderLoader(){		if (loader === false){			return(				<View style={[styles.loading, styles.flexCenter, {height:'100%'}]}>					<ActivityIndicator size="large" color={COLORS.blue} style={{ alignSelf: 'center' }} />				</View>			);		}	}	const onShare = async () => {		try {			const result = await Share.share({				message:					Platform.OS === 'ios' ? 'https://apps.apple.com/us/app/id1533160556' : 'https://play.google.com/store/apps/details?id=com.safari.client',			});		} catch (error) {			alert(error.message);		}	};	return (		<Container>			{ renderLoader() }			<View>				<View style={{ flexDirection: 'row', justifyCenter: 'space-between', position: 'absolute', width: '100%', height: 100, zIndex: 1, marginTop: IS_IPHONE_X ? 50 : 20 }}>					<TouchableOpacity style={{ left: 20 }} onPress={() => navigation.goBack()}>						<Image source={require('../../assets/images/white_back.png')} style={[ styles.transform, { width: 25, height: 25, marginTop: 10 }]} resizeMode={'contain'}/>					</TouchableOpacity>					<TouchableOpacity onPress={() => onShare()} style={{ position: 'absolute', right: 20}}>						<Image source={require('../../assets/images/share.png')} style={{ width: 25, height: 25, marginTop: 10 }} resizeMode={'contain'}/>					</TouchableOpacity>				</View>				<View style={{ width: '100%', height: IS_IPHONE_X ? 400 : 330 }}>					{						providerDetails && providerDetails.images ?							<Swiper dotStyle={[styles.doteStyle2]}								activeDotStyle={[styles.activeDot2]}								key={3}								containerStyle={{ height: 300 }}								style={{ flexDirection: isIOS && I18nManager.isRTL  ? 'row' : 'row-reverse' }}								autoplay={true} loop={true}>								{									providerDetails.images.map(( img, i ) => (										<View key={i}>											<View style={[styles.overlay_black , styles.Width_100, { zIndex: 1, height: 400, position: 'absolute' }]} />											<Image source={{uri: img.image}} style={{ width: '100%', height: height*40/100, alignSelf: 'center' }} resizeMode={'cover'}/>										</View>									))								}							</Swiper> : null					}				</View>				<View style={{ width: '100%', height: 130, borderTopRightRadius: 40, backgroundColor: COLORS.blue, marginTop: -100, flexDirection: 'row', padding: 15 }}>					{						providerDetails && providerDetails.provider ?							<View>								<Text style={[styles.textBold, styles.textSize_18, styles.text_White]}>{ providerDetails.provider.name }</Text>								<View style={{ width: 120 }}>									<StarRating										disabled={true}										maxStars={5}										rating={providerDetails.provider.rate}										fullStarColor={COLORS.orange}										emptyStarColor={COLORS.light_gray}										starSize={18}									/>								</View>							</View> : null					}					{						providerDetails && providerDetails.provider ?							<TouchableOpacity onPress={() => Linking.openURL('https://api.whatsapp.com/send?phone=' + whatsNum())} style={{ flexDirection: 'row', position: 'absolute', right: 20, top: 35 }}>								<Image source={require('../../assets/images/whatsapp.png')} style={{ width: 30, height: 30, marginHorizontal: 10 }}/>								<Text style={[styles.textRegular, styles.textSize_16, styles.text_White]}>{ i18n.t('contactUs') }</Text>							</TouchableOpacity> : null					}				</View>				<View style={{ width: '100%', height: height-330, borderTopRightRadius: 50, backgroundColor: '#fff', marginTop: -45, flexDirection: 'row', padding: 15 }}>					{renderNoData()}					{						providerDetails && providerDetails.services ?							<FlatList								data={providerDetails.services}								renderItem={({ item , index}) => <Item									name={item.name}									index={index}									image={item.image}									price={item.price}									id={item.id}									isFav={item.isFav}									navigation={navigation}									item={item}								/>}								keyExtractor={item => item.id}								numColumns={2}								horizontal={false}								columnWrapperStyle={[styles.Width_100 , styles.directionRowSpace]}								extraData={extraData}							/> : null					}				</View>				<View style={{ height: 30, width: '100%' }} />			</View>		</Container>	)}export default ProviderDetails;