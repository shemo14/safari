import React, { useState , useEffect, useRef } from "react";import {	View,	Text,	Image,	TouchableOpacity,	ImageBackground,	I18nManager,	Dimensions,	FlatList,	Platform,	Share, ActivityIndicator,} from "react-native";import {Container, Header, Right, Body, Icon, Content } from 'native-base'import styles from '../../assets/styles'import i18n from "../../locale/i18n";import COLORS from "../consts/colors";import {useDispatch, useSelector} from "react-redux";import {getFavorites} from '../actions';import * as Animatable from "react-native-animatable";const width	 		= Dimensions.get('window').width;const height 		= Dimensions.get('window').height;const isIOS  		= Platform.OS === 'ios';const IS_IPHONE_X 	= (height === 812 || height === 896) && Platform.OS === 'ios';function Favs({navigation, route}) {	const lang = useSelector(state => state.lang.lang);	const token = useSelector(state => state.auth.user ? state.auth.user.data.token : null);	const favorites = useSelector(state => state.favorites.favorites);	const favoritesLoader = useSelector(state => state.favorites.loader);	const [screenLoader , setScreenLoader ] = useState(true);	const dispatch = useDispatch();	function fetchData(){		setScreenLoader(true)		dispatch(getFavorites(lang, token))	}	useEffect(() => {		fetchData();		const unsubscribe = navigation.addListener('focus', () => {			fetchData();		});		return unsubscribe;	}, [navigation , favoritesLoader]);	useEffect(() => {		setScreenLoader(false)	}, [favorites]);	function renderLoader(){		if (screenLoader){			return(				<View style={[styles.loading, styles.flexCenter, {backgroundColor:'#fff'}]}>					<ActivityIndicator size="large" color={COLORS.blue} style={{ alignSelf: 'center' }} />				</View>			);		}	}	// function renderNoData() {	//     if (notifications && (notifications).length <= 0) {	//         return (	//             <View style={[styles.directionColumnCenter , styles.Width_100, styles.marginTop_25]}>	//                 <Image source={require('../../assets/images/note.png')} resizeMode={'contain'}	//                        style={{alignSelf: 'center', width: 200, height: 200}}/>	//             </View>	//         );	//     }	//	//     return null	// }	function Item({ name , image , index, isFav , price }) {		return (			<TouchableOpacity key={'_' + index} style={{ borderRadius: 10, height: 170, width: '47%', margin: 5, overflow: 'hidden',}} onPress={() => navigation.navigate('serviceDetails')}>				<ImageBackground source={{uri:image}} resizeMode={'cover'} style={{ height: 170, width: '100%', borderRadius: 10 }}>					<View style={[styles.overlay_black , styles.Width_100, { zIndex: 0, height: 200, position: 'absolute' }]} />					<TouchableOpacity style={{ alignSelf: "flex-end", padding: 10 }} >						<Icon type={'AntDesign'} name={'heart'} style={{ color: COLORS.orange, fontSize: 20 }} />					</TouchableOpacity>					<View style={{ bottom: 0, position: 'absolute', height: 60, paddingHorizontal: 10 }}>						<Text style={[ styles.textBold, styles.text_White, styles.textSize_16, styles._alignText, styles.Width_100 ]}>{ name }</Text>						<Text style={[ styles.textBold, styles.text_orange, styles._alignText, styles.textRight ]}>{ price } { i18n.t('RS') } </Text>					</View>				</ImageBackground>			</TouchableOpacity>		);	}	return (		<Container>			{renderLoader()}			<ImageBackground source={require('../../assets/images/menu_bg.png')} style={{ width, height: height-100, alignSelf: 'center', flexGrow: 1 }} resizeMode={'cover'}>				<Header style={{ backgroundColor: 'transparent',  borderBottomWidth: 0 }} noShadow>					<Right style={{ flex: 0, marginLeft: 10 }}>						<TouchableOpacity onPress={() => navigation.goBack()} style={{ width: 50, height: 50, justifyCenter: 'center', alignItems: 'center' }}>							<Image source={require('../../assets/images/white_back.png')} style={[ styles.transform , { width: 27, height: 27, marginTop: 10 }]} resizeMode={'contain'}/>						</TouchableOpacity>						<Text style={{ textAlign:  I18nManager.isRTL ? 'right' : 'left', color: '#fff', fontSize: 22, fontFamily: 'ArbFONTSBold', marginBottom: 5 }}>{ i18n.t('favourite') }</Text>					</Right>					<Body style={{ alignSelf: 'flex-start'}} />				</Header>				<Content contentContainerStyle={[styles.bgFullWidth]} bounces={false} style={{height:'100%', marginTop: 10, overflow: 'hidden', borderTopRightRadius: 50, }}>					<View style={{ width: '100%' , height:'100%', padding: 15, borderTopRightRadius: 50, backgroundColor: '#fff' }}>						<FlatList							data={favorites}							renderItem={({ item , index}) => <Item								name={item.name}								index={index}								image={item.image}								isFav={item.isFav}								price={item.price}								id={item.id}							/>}							keyExtractor={item => item.id}							numColumns={2}							horizontal={false}							columnWrapperStyle={[styles.directionRowCenter]}							// extraData={isFav}						/>					</View>				</Content>			</ImageBackground>		</Container>	)}export default Favs;